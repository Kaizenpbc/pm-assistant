{
  "name": "pm-application-v2",
  "version": "1.0.0",
  "description": "Production-ready Project Management Application with modern architecture",
  "main": "dist/server/index.js",
  "scripts": {
    "dev": "node dev.js",
    "dev:simple": "concurrently --kill-others-on-fail --prefix-colors \"bgBlue.bold,bgGreen.bold\" --names \"SERVER,CLIENT\" \"npm run server:dev\" \"npm run client:dev\"",
    "server:dev": "nodemon --config nodemon.json",
    "client:dev": "cd src/client && npm run dev",
    "build": "npm run build:server && npm run build:client",
    "build:server": "tsc --project tsconfig.json",
    "build:client": "cd src/client && npm run build",
    "start": "node dist/server/index.js",
    "test": "vitest",
    "test:unit": "vitest run",
    "test:unit:watch": "vitest",
    "test:unit:ui": "vitest --ui",
    "test:integration": "vitest run tests/integration",
    "test:system": "vitest run tests/integration/system",
    "test:connectivity": "vitest run tests/integration/system/connectivity.test.ts",
    "test:health-scripts": "vitest run tests/integration/system/health-check-script.test.ts",
    "test:config-validation": "vitest run tests/integration/system/configuration-validation.test.ts",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:coverage": "vitest run --coverage",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "type-check": "tsc --noEmit",
    "db:migrate": "tsx src/server/database/migrate.ts",
    "db:seed": "tsx src/server/database/seed.ts",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up --build",
    "docker:dev:detached": "docker-compose -f docker-compose.dev.yml up -d --build",
    "docker:stop": "docker-compose -f docker-compose.dev.yml down",
    "docker:clean": "docker-compose -f docker-compose.dev.yml down -v --rmi all",
    "docker:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "docker:mysql": "docker-compose up -d mysql",
    "docker:health": "curl http://localhost:3001/health && curl http://localhost:5173",
    "health:check": "curl -s http://localhost:3001/health/basic | jq .",
    "health:detailed": "curl -s http://localhost:3001/health/detailed | jq .",
    "health:ready": "curl -s http://localhost:3001/health/ready | jq .",
    "health:live": "curl -s http://localhost:3001/health/live | jq .",
    "health:all": "echo '=== Basic Health ===' && npm run health:check && echo '=== Detailed Health ===' && npm run health:detailed && echo '=== Readiness ===' && npm run health:ready && echo '=== Liveness ===' && npm run health:live",
    "health:script": "node scripts/health-check.js",
    "health:script:verbose": "node scripts/health-check.js --verbose",
    "health:monitor": "watch -n 30 'npm run health:script'",
    "config:validate": "node scripts/validate-config.js",
    "config:generate-secrets": "node scripts/generate-secrets.js",
    "config:generate-env": "node scripts/generate-secrets.js --generate-env",
    "config:check": "npm run config:validate && echo 'Configuration is valid!'",
    "backup:create": "node scripts/backup-database.js",
    "backup:full": "node scripts/backup-database.js full",
    "backup:schema": "node scripts/backup-database.js schema",
    "backup:data": "node scripts/backup-database.js data",
    "backup:all": "node scripts/backup-database.js full schema data",
    "restore": "node scripts/restore-database.js",
    "backup:schedule": "node scripts/backup-scheduler.js start",
    "backup:schedule:stop": "node scripts/backup-scheduler.js stop",
    "backup:schedule:status": "node scripts/backup-scheduler.js status",
    "backup:once": "node scripts/backup-scheduler.js once",
    "recovery": "scripts\\recovery.bat",
    "setup": "scripts\\setup.bat",
    "reset": "npm run recovery",
    "fresh-install": "npm run setup"
  },
  "keywords": [
    "project-management",
    "fastify",
    "react",
    "typescript",
    "production"
  ],
  "author": "Guyana Civic",
  "license": "MIT",
  "type": "commonjs",
  "dependencies": {
    "@fastify/cookie": "^11.0.2",
    "@fastify/cors": "^11.1.0",
    "@fastify/helmet": "^13.0.1",
    "@fastify/rate-limit": "^10.3.0",
    "@fastify/swagger": "^9.5.1",
    "@fastify/swagger-ui": "^5.2.3",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.10",
    "bcryptjs": "^3.0.2",
    "cors": "^2.8.5",
    "dotenv": "^17.2.2",
    "express": "^5.1.0",
    "fastify": "^5.6.0",
    "jsonwebtoken": "^9.0.2",
    "mysql2": "^3.15.1",
    "pino": "^9.11.0",
    "pino-pretty": "^13.1.1",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.48.2",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/supertest": "^6.0.2",
    "concurrently": "^9.2.1",
    "node-cron": "^3.0.3",
    "nodemon": "^3.1.10",
    "supertest": "^7.0.0",
    "tsx": "^4.20.5",
    "vitest": "^3.2.4"
  }
}
