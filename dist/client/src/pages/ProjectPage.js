"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectPage = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_router_dom_1 = require("react-router-dom");
const react_query_1 = require("@tanstack/react-query");
const api_1 = require("../services/api");
const LoadingSpinner_1 = require("../components/LoadingSpinner");
const ProjectPage = () => {
    const { id } = (0, react_router_dom_1.useParams)();
    const navigate = (0, react_router_dom_1.useNavigate)();
    const { data: projectData, isLoading, error } = (0, react_query_1.useQuery)({
        queryKey: ['project', id],
        queryFn: () => api_1.apiService.getProject(id),
        enabled: !!id,
    });
    if (isLoading) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "min-h-screen flex items-center justify-center", children: (0, jsx_runtime_1.jsx)(LoadingSpinner_1.LoadingSpinner, { size: "lg" }) }));
    }
    if (error || !projectData) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "min-h-screen flex items-center justify-center", children: (0, jsx_runtime_1.jsxs)("div", { className: "text-center", children: [(0, jsx_runtime_1.jsx)("h2", { className: "text-2xl font-bold text-gray-900 mb-4", children: "Project not found" }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-600 mb-4", children: "The project you're looking for doesn't exist or you don't have access to it." }), (0, jsx_runtime_1.jsx)("button", { onClick: () => navigate('/dashboard'), className: "btn btn-primary", children: "Back to Dashboard" })] }) }));
    }
    const project = projectData.project;
    return ((0, jsx_runtime_1.jsxs)("div", { className: "min-h-screen bg-gray-50", children: [(0, jsx_runtime_1.jsx)("header", { className: "bg-white shadow-sm border-b", children: (0, jsx_runtime_1.jsx)("div", { className: "max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8", children: (0, jsx_runtime_1.jsx)("div", { className: "flex items-center justify-between", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-4", children: [(0, jsx_runtime_1.jsx)("button", { onClick: () => navigate('/dashboard'), className: "btn btn-secondary", children: "\u2190 Back to Dashboard" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h1", { className: "text-2xl font-bold text-gray-900", children: project.name }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-600", children: project.description || 'Project Management' })] })] }) }) }) }), (0, jsx_runtime_1.jsx)("main", { className: "max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8", children: (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 lg:grid-cols-3 gap-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "lg:col-span-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "card mb-6", children: [(0, jsx_runtime_1.jsx)("div", { className: "card-header", children: (0, jsx_runtime_1.jsx)("h2", { className: "text-lg font-semibold text-gray-900", children: "Project Information" }) }), (0, jsx_runtime_1.jsx)("div", { className: "card-content", children: (0, jsx_runtime_1.jsxs)("dl", { className: "grid grid-cols-1 sm:grid-cols-2 gap-4", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("dt", { className: "text-sm font-medium text-gray-500", children: "Status" }), (0, jsx_runtime_1.jsx)("dd", { className: "mt-1 text-sm text-gray-900 capitalize", children: project.status.replace('_', ' ') })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("dt", { className: "text-sm font-medium text-gray-500", children: "Priority" }), (0, jsx_runtime_1.jsx)("dd", { className: "mt-1 text-sm text-gray-900 capitalize", children: project.priority })] }), project.startDate && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("dt", { className: "text-sm font-medium text-gray-500", children: "Start Date" }), (0, jsx_runtime_1.jsx)("dd", { className: "mt-1 text-sm text-gray-900", children: new Date(project.startDate).toLocaleDateString() })] })), project.endDate && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("dt", { className: "text-sm font-medium text-gray-500", children: "End Date" }), (0, jsx_runtime_1.jsx)("dd", { className: "mt-1 text-sm text-gray-900", children: new Date(project.endDate).toLocaleDateString() })] }))] }) })] }), project.budgetAllocated && ((0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsx)("div", { className: "card-header", children: (0, jsx_runtime_1.jsx)("h2", { className: "text-lg font-semibold text-gray-900", children: "Budget Information" }) }), (0, jsx_runtime_1.jsx)("div", { className: "card-content", children: (0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between text-sm text-gray-600 mb-2", children: [(0, jsx_runtime_1.jsx)("span", { children: "Budget Progress" }), (0, jsx_runtime_1.jsxs)("span", { children: ["$", project.budgetSpent.toLocaleString(), " / $", project.budgetAllocated.toLocaleString()] })] }), (0, jsx_runtime_1.jsx)("div", { className: "w-full bg-gray-200 rounded-full h-3", children: (0, jsx_runtime_1.jsx)("div", { className: "bg-blue-600 h-3 rounded-full", style: {
                                                                width: `${Math.min((project.budgetSpent / project.budgetAllocated) * 100, 100)}%`,
                                                            } }) }), (0, jsx_runtime_1.jsxs)("div", { className: "mt-2 text-sm text-gray-500", children: [((project.budgetSpent / project.budgetAllocated) * 100).toFixed(1), "% of budget used"] })] }) })] }))] }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsx)("div", { className: "card-header", children: (0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900", children: "Quick Actions" }) }), (0, jsx_runtime_1.jsxs)("div", { className: "card-content space-y-3", children: [(0, jsx_runtime_1.jsx)("button", { className: "w-full btn btn-primary", children: "Edit Project" }), (0, jsx_runtime_1.jsx)("button", { className: "w-full btn btn-secondary", children: "Add Task" }), (0, jsx_runtime_1.jsx)("button", { className: "w-full btn btn-secondary", children: "View Schedule" })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsx)("div", { className: "card-header", children: (0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900", children: "Project Statistics" }) }), (0, jsx_runtime_1.jsx)("div", { className: "card-content", children: (0, jsx_runtime_1.jsxs)("div", { className: "space-y-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-gray-600", children: "Created" }), (0, jsx_runtime_1.jsx)("span", { className: "text-sm font-medium text-gray-900", children: new Date(project.createdAt).toLocaleDateString() })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-gray-600", children: "Last Updated" }), (0, jsx_runtime_1.jsx)("span", { className: "text-sm font-medium text-gray-900", children: new Date(project.updatedAt).toLocaleDateString() })] }), project.budgetAllocated && ((0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-gray-600", children: "Remaining Budget" }), (0, jsx_runtime_1.jsxs)("span", { className: "text-sm font-medium text-gray-900", children: ["$", (project.budgetAllocated - project.budgetSpent).toLocaleString()] })] }))] }) })] })] })] }) })] }));
};
exports.ProjectPage = ProjectPage;
//# sourceMappingURL=ProjectPage.js.map